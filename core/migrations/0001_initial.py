# Generated by Django 5.2.6 on 2025-09-06 15:12

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.CharField(max_length=120)),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('text', models.TextField()),
                ('text_ru', models.TextField(null=True)),
                ('text_ky', models.TextField(null=True)),
                ('text_en', models.TextField(null=True)),
                ('source', models.CharField(choices=[('google', 'Google'), ('2gis', '2ГИС'), ('instagram', 'Instagram'), ('manual', 'Ручной ввод')], default='manual', max_length=20)),
                ('source_url', models.URLField(blank=True)),
                ('is_published', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(choices=[('engine', 'Раскоксовка/двигатель'), ('diagnostics', 'Диагностика'), ('fluids', 'Автохимия/жидкости'), ('detailing', 'Детейлинг')], default='engine', max_length=32)),
                ('title', models.CharField(max_length=200)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_ky', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('slug', models.SlugField(help_text='URL-часть (RU)', max_length=220, unique=True)),
                ('slug_ru', models.SlugField(help_text='URL-часть (RU)', max_length=220, null=True, unique=True)),
                ('slug_ky', models.SlugField(help_text='URL-часть (RU)', max_length=220, null=True, unique=True)),
                ('slug_en', models.SlugField(help_text='URL-часть (RU)', max_length=220, null=True, unique=True)),
                ('short_desc', models.TextField(blank=True)),
                ('short_desc_ru', models.TextField(blank=True, null=True)),
                ('short_desc_ky', models.TextField(blank=True, null=True)),
                ('short_desc_en', models.TextField(blank=True, null=True)),
                ('body', models.TextField(blank=True)),
                ('body_ru', models.TextField(blank=True, null=True)),
                ('body_ky', models.TextField(blank=True, null=True)),
                ('body_en', models.TextField(blank=True, null=True)),
                ('price_from', models.PositiveIntegerField(blank=True, help_text='Цена от, сом', null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='services/covers/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_published', models.BooleanField(default=True)),
                ('meta_title', models.CharField(blank=True, max_length=255)),
                ('meta_title_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_title_ky', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_title_en', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=350)),
                ('meta_description_ru', models.CharField(blank=True, max_length=350, null=True)),
                ('meta_description_ky', models.CharField(blank=True, max_length=350, null=True)),
                ('meta_description_en', models.CharField(blank=True, max_length=350, null=True)),
            ],
            options={
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.CharField(max_length=255)),
                ('question_ru', models.CharField(max_length=255, null=True)),
                ('question_ky', models.CharField(max_length=255, null=True)),
                ('question_en', models.CharField(max_length=255, null=True)),
                ('answer', models.TextField()),
                ('answer_ru', models.TextField(null=True)),
                ('answer_ky', models.TextField(null=True)),
                ('answer_en', models.TextField(null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_published', models.BooleanField(default=True)),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='core.service')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_ky', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('slug', models.SlugField(max_length=220, unique=True)),
                ('slug_ru', models.SlugField(max_length=220, null=True, unique=True)),
                ('slug_ky', models.SlugField(max_length=220, null=True, unique=True)),
                ('slug_en', models.SlugField(max_length=220, null=True, unique=True)),
                ('before_image', models.ImageField(upload_to='cases/before/')),
                ('after_image', models.ImageField(upload_to='cases/after/')),
                ('metric_label', models.CharField(blank=True, help_text="Напр., 'Компрессия'", max_length=120)),
                ('metric_before', models.CharField(blank=True, help_text="Напр., '8 бар'", max_length=50)),
                ('metric_after', models.CharField(blank=True, help_text="Напр., '13 бар'", max_length=50)),
                ('video_url', models.URLField(blank=True)),
                ('is_published', models.BooleanField(default=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='core.service')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
